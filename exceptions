exception Foo;
raise Foo; 

exception BadM;
exception BadN;
exception OutofRange of int * int;

fun comb1 (n, m) = 
    if n <= 0 then raise OutofRange (n, m)
    else if m < 0 orelse m > n then raise OutofRange (n, m)
    else if m = 0 orelse m = n then 1
    else comb1 (n - 1, m) + comb1 (n - 1, m - 1);

fun comb (n, m) = comb1 (n, m) handle
    OutofRange (0, 0) => 1
  | OutofRange (n, m) => (
        print ("Out of range: n = " ^ Int.toString n ^ ", m = " ^ Int.toString m ^ "\n");
        0 (* Provide a valid return value *)
    );


exception shortList of int list;
fun returnThird1 L =
if length (L) < 3 then raise shortList (L)
else hd (tl(tl(L)));

fun returnThird L = returnThird1 L handle 
shortList L => (
    print ("List too short \n ");
    0
);


exception negativeValue of int;

fun fact1(0)=1
| fact1 (n)=(
    if n < 0 then raise negativeValue (n)
    else n* fact1 (n-1)
);

fun factorial n = fact1 n handle
negativeValue n => (
        print ("Negative value: ");
        print (Int.toString(n));
        print ("\n");
    0
);

fun identity (x) = x;